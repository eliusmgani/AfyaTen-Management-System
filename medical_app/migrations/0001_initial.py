# Generated by Django 4.1.2 on 2022-12-26 21:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_no', models.CharField(max_length=10)),
                ('gender', models.CharField(max_length=20)),
                ('address', models.TextField(null=True)),
                ('user_type', models.CharField(choices=[('Admin', 'Admin'), ('Practitioner', 'Practitioner'), ('Nurse', 'Nurse'), ('Receptionist', 'Receptionist')], default='Admin', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_company', models.CharField(max_length=50)),
                ('covarage_plan', models.CharField(max_length=50)),
                ('cardno', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=50)),
                ('item_name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('mobile_no', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('address', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientAppointment',
            fields=[
                ('name', models.CharField(blank=True, max_length=50, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Open', 'Open'), ('Closed', 'Closed')], default='Pending', max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('appointment_type', models.CharField(choices=[('Normal Visit', 'Normal Visit'), ('Emergency', 'Emergency'), ('Exrternal Referrals', 'Exrternal Referrals')], default='Normal Visit', max_length=50)),
                ('is_cash_patient', models.BooleanField()),
                ('coverage_plan', models.CharField(blank=True, max_length=50, null=True)),
                ('cardno', models.CharField(blank=True, max_length=20, null=True)),
                ('insurance_company', models.CharField(blank=True, max_length=50, null=True)),
                ('authorization_no', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('insurance_subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.insurancerecord')),
            ],
        ),
        migrations.CreateModel(
            name='Practitioner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('profile_pic', models.ImageField(upload_to='media/img/practitioner')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.medicaldepartment')),
            ],
        ),
        migrations.CreateModel(
            name='PractitionerSpeciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciliaty_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_list_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='VitalSign',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('appointment_type', models.CharField(choices=[('Normal Visit', 'Normal Visit'), ('Emergency', 'Emergency'), ('Exrternal Referrals', 'Exrternal Referrals')], default='Normal Visit', max_length=50)),
                ('paid', models.BooleanField()),
                ('body_templature', models.CharField(max_length=20)),
                ('respiratory_rate', models.CharField(max_length=20)),
                ('oxygen_saturation_spo2', models.CharField(max_length=20)),
                ('rbg', models.CharField(max_length=20)),
                ('heart_rate', models.CharField(max_length=20)),
                ('abdomen', models.CharField(choices=[('Normal', 'Normal'), ('Bloated', 'Bloated'), ('Full', 'Full'), ('Fluid', 'Fluid'), ('Constipated', 'Constipated')], default='Normal', max_length=50)),
                ('bp_systolic', models.CharField(max_length=20)),
                ('bp_diastolic', models.CharField(max_length=20)),
                ('bp', models.CharField(max_length=20)),
                ('height', models.CharField(max_length=20)),
                ('weight', models.CharField(max_length=20)),
                ('bmi', models.CharField(max_length=20)),
                ('vital_signs_note', models.TextField()),
                ('appointment_no', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.patientappointment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.patient')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.practitioner')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='media/img/services')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.medicaldepartment')),
            ],
        ),
        migrations.CreateModel(
            name='SalesInvoice',
            fields=[
                ('name', models.CharField(blank=True, max_length=50, primary_key=True, serialize=False)),
                ('posting_date', models.DateField()),
                ('posting_time', models.TimeField()),
                ('reference_name', models.CharField(max_length=50)),
                ('reference_number', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('created_by', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.medicaldepartment')),
                ('item_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.item')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.patient')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.practitioner')),
            ],
        ),
        migrations.CreateModel(
            name='Receptionist',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media/img/receptionist')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='practitioner',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.practitionerspeciality'),
        ),
        migrations.AddField(
            model_name='practitioner',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientappointment',
            name='invoice_no',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.salesinvoice'),
        ),
        migrations.AddField(
            model_name='patientappointment',
            name='medical_department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.medicaldepartment'),
        ),
        migrations.AddField(
            model_name='patientappointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.patient'),
        ),
        migrations.AddField(
            model_name='patientappointment',
            name='practitioner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.practitioner'),
        ),
        migrations.AddField(
            model_name='patientappointment',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.practitionerspeciality'),
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media/img/nurse')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_list_rate', models.FloatField()),
                ('item_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medical_app.item')),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medical_app.pricelist')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='item_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.itemgroup'),
        ),
        migrations.AddField(
            model_name='insurancerecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='medical_app.patient'),
        ),
    ]
